generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGO_URL")
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  login    String   @unique
  password String
  role     Role
  ratings  Rating[]
}

enum Role {
  USER
  ADMIN
}

model Source {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  name       String      @unique
  characters Character[]
}

model Character {
  id      String         @id @default(auto()) @map("_id") @db.ObjectId
  name    String         @unique
  skins   Skin[]
  ratings Rating[]
  tags    CharacterTag[]

  Source   Source? @relation(fields: [sourceId], references: [id])
  sourceId String? @db.ObjectId
}

model Skin {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  imageUrl String

  character   Character @relation(fields: [characterId], references: [id])
  characterId String    @db.ObjectId
}

model Rating {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  score Int

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  character   Character @relation(fields: [characterId], references: [id])
  characterId String    @db.ObjectId
}

model Tag {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  name         String         @unique
  ratings      Int[]
  CharacterTag CharacterTag[]
}

model CharacterTag {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  character   Character @relation(fields: [characterId], references: [id])
  characterId String    @db.ObjectId

  tag   Tag    @relation(fields: [tagId], references: [id])
  tagId String @db.ObjectId
}
